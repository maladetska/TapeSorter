#pragma once

#include "../chunk/chunk.hpp"
#include "../tape_interface.hpp"

namespace tape {
////////////////////////////////////////////////////////////////////////////////
/// \brief Information about chunks inside the tape.
////////////////////////////////////////////////////////////////////////////////
struct ChunksInfo {
  //////////////////////////////////////////////////////////////////////////////
  /// \brief ChunksInfo default constructor.
  //////////////////////////////////////////////////////////////////////////////
  ChunksInfo() = default;
  //////////////////////////////////////////////////////////////////////////////
  /// \brief ChunksInfo constructor.
  ///
  /// \param chunk_size max chunk size.
  /// \param tape_size number of elements of the tape.
  //////////////////////////////////////////////////////////////////////////////
  ChunksInfo(ChunkSize chunk_size, TapeSize tape_size);

  //////////////////////////////////////////////////////////////////////////////
  /// \brief Number of chunks in the tape.
  //////////////////////////////////////////////////////////////////////////////
  ChunksNumber chunks_number_{};
  //////////////////////////////////////////////////////////////////////////////
  /// \brief The maximum possible size of the chunk. All the chunks have this
  /// size except the last one. The last chunk can also be of this size, but
  /// nevertheless its actual size lies in the last_size_chunk_ variable.
  //////////////////////////////////////////////////////////////////////////////
  ChunkSize max_chunk_size_{};
  //////////////////////////////////////////////////////////////////////////////
  /// \brief The size of the last chunk. last_size_chunk_ is less than or equal
  /// to max_size_chunk_.
  //////////////////////////////////////////////////////////////////////////////
  ChunkSize last_chunk_size_{};
};
}  // namespace tape
